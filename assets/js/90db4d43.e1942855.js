"use strict";(self.webpackChunkengineering_playbook=self.webpackChunkengineering_playbook||[]).push([[686],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>p});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),m=u(n),p=o,f=m["".concat(l,".").concat(p)]||m[p]||c[p]||a;return n?r.createElement(f,s(s({ref:t},d),{},{components:n})):r.createElement(f,s({ref:t},d))}));function p(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var u=2;u<a;u++)s[u]=n[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6383:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>c,frontMatter:()=>a,metadata:()=>i,toc:()=>u});var r=n(7462),o=(n(7294),n(3905));n(8209);const a={},s="Remove tests from our open-source Terraform modules",i={unversionedId:"infrasec/adr/tests_in_terraform",id:"infrasec/adr/tests_in_terraform",title:"Remove tests from our open-source Terraform modules",description:"Context and Problem Statement",source:"@site/docs/infrasec/adr/0001-tests_in_terraform.md",sourceDirName:"infrasec/adr",slug:"/infrasec/adr/tests_in_terraform",permalink:"/docs/infrasec/adr/tests_in_terraform",draft:!1,editUrl:"https://github.com/trussworks/Engineering-Playbook/edit/main/docs/infrasec/adr/0001-tests_in_terraform.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"InfraSec",permalink:"/docs/infrasec/"},next:{title:"{short title of solved problem and solution}",permalink:"/docs/infrasec/adr/template"}},l={},u=[{value:"Context and Problem Statement",id:"context-and-problem-statement",level:2},{value:"Decision Drivers",id:"decision-drivers",level:2},{value:"Considered Options",id:"considered-options",level:2},{value:"Decision Outcome",id:"decision-outcome",level:2},{value:"Validation",id:"validation",level:2},{value:"Pros and Cons of the Options",id:"pros-and-cons-of-the-options",level:2},{value:"Do nothing",id:"do-nothing",level:3},{value:"Assign dedicated staff to maintain CI in the modules",id:"assign-dedicated-staff-to-maintain-ci-in-the-modules",level:3},{value:"Remove branch protection requiring tests pass before merging",id:"remove-branch-protection-requiring-tests-pass-before-merging",level:3},{value:"Remove tests from the Terraform modules",id:"remove-tests-from-the-terraform-modules",level:3}],d={toc:u};function c(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"remove-tests-from-our-open-source-terraform-modules"},"Remove tests from our open-source Terraform modules"),(0,o.kt)("h2",{id:"context-and-problem-statement"},"Context and Problem Statement"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://terratest.gruntwork.io/"},"Terratest")," is a Go library that provides\npatterns and helper functions for testing infrastructure, including Terraform\ncode. Truss has ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/orgs/trussworks/repositories?q=terraform+in%3Aname&type=all"},"open source Terraform modules"),", and we have added\ntests for many of them using Terratest. Following Truss' understanding of best\npractices for production code, we block updates to the modules pending\nsuccessful Terratests in CI."),(0,o.kt)("p",null,"There is no Truss policy that assigns responsibility for maintaining the code\nrepositories for these modules. In practice, it informally falls to InfraSec\nReserve. Importantly, there is no SLA for maintenance of our Terraform modules.\nBecause the Reserve is unevenly staffed across time, CI systems in these\nrepositories have become stale. Dependencies and tests themselves grow out of\ndate, and we have no monitoring or health checks that alert us to build\nfailures so they can be actioned. In turn, neglected and broken CI pipelines\nblock automated dependency updates from auto-merging, so these updates languish\nas well. (",(0,o.kt)("a",{parentName:"p",href:"https://github.com/trussworks/terraform-module-template/pull/96"},"Example"),")"),(0,o.kt)("p",null,"We remain committed to the value of, and need for, tests in software\nengineering overall. However, the value Truss has realized from our experiment\nwith Terratests in these modules is limited. Typically, the tests create a\nresource in the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/trussworks/legendary-waddle/tree/main/trussworks-ci"},(0,o.kt)("inlineCode",{parentName:"a"},"trussworks-ci"))," account and pass the build if\na ",(0,o.kt)("inlineCode",{parentName:"p"},"terraform apply")," was successful. Such tests are not sufficient basis for\nconfidence that functionality has not regressed, or that the module will do\nanything useful at all in a practical environment: rather, Truss engineers rely\non Terraform plans to evaluate the impact of changes to a module and report\nbugs if they observe anything unexpected. This casts further doubt on the value\nof the tests."),(0,o.kt)("h2",{id:"decision-drivers"},"Decision Drivers"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Broken tests should not routinely block automation from applying dependency\nupdates."),(0,o.kt)("li",{parentName:"ul"},"Tests should ",(0,o.kt)("em",{parentName:"li"},"reduce")," the ongoing work required to maintain our Terraform\nmodules. If they increase it, they are bad tests."),(0,o.kt)("li",{parentName:"ul"},"The success or failure of a test suite should be a reliable signal that the\ncode is healthy and new changes have not introduced bugs or regressions in\nfunctionality. If they aren't, they are bad tests.")),(0,o.kt)("h2",{id:"considered-options"},"Considered Options"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Do nothing."),(0,o.kt)("li",{parentName:"ul"},"Assign dedicated staff to maintain CI in the modules."),(0,o.kt)("li",{parentName:"ul"},"Remove branch protection requiring tests pass before merging."),(0,o.kt)("li",{parentName:"ul"},"Remove tests from the Terraform modules.")),(0,o.kt)("h2",{id:"decision-outcome"},"Decision Outcome"),(0,o.kt)("p",null,"Chosen option: Remove the tests from the Terraform modules."),(0,o.kt)("h2",{id:"validation"},"Validation"),(0,o.kt)("p",null,"Terraform modules conform to this ADR if they do not have tests for Terraform\ncode."),(0,o.kt)("h2",{id:"pros-and-cons-of-the-options"},"Pros and Cons of the Options"),(0,o.kt)("h3",{id:"do-nothing"},"Do nothing"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Good, because it's the least work in the short term."),(0,o.kt)("li",{parentName:"ul"},"Bad, because none of the decision drivers are achieved.")),(0,o.kt)("h3",{id:"assign-dedicated-staff-to-maintain-ci-in-the-modules"},"Assign dedicated staff to maintain CI in the modules"),(0,o.kt)("p",null,"Maintenance of any production software is an on-going process. Having engineers\nassigned to doing the non-billable work maintaining our modules would allow us\nto keep the tests working and even expand them to make them more informative\nand provide clearer signal."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Good, because having good tests is better than not having tests."),(0,o.kt)("li",{parentName:"ul"},"Good, because dedicated engineers could expand the test suites to make them\nmore useful."),(0,o.kt)("li",{parentName:"ul"},"Bad, because non-billable engineers are expensive, and only Truss leadership\ncan create a new role for it."),(0,o.kt)("li",{parentName:"ul"},"Bad, because without an understanding of how these modules are adopted, we\nwon't know whether or to what extent the effort is a benefit to Truss'\nclients.")),(0,o.kt)("h3",{id:"remove-branch-protection-requiring-tests-pass-before-merging"},"Remove branch protection requiring tests pass before merging"),(0,o.kt)("p",null,"Branch protection rules are separate from CI workflows in Github Actions. We\ncan configure the modules' repositories to continue running the tests, while\nallowing PRs to merge even if the tests fail."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Good, because Renovatebot or any other dependency automation we may employ\nwill not be blocked by stale tests."),(0,o.kt)("li",{parentName:"ul"},"Good, because we won't have to delete the tests from the codebase."),(0,o.kt)("li",{parentName:"ul"},"Bad, because it does not meet the critical decision driver that tests should\nprovide a reliable signal. Because this option does not address the lack of\nengineering time for maintaining the tests, they would be ignored and rot\nfurther.")),(0,o.kt)("h3",{id:"remove-tests-from-the-terraform-modules"},"Remove tests from the Terraform modules"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Good, because Renovatebot or any other dependency automation we may employ\nwill not be blocked by stale tests."),(0,o.kt)("li",{parentName:"ul"},"Good, because it reduces noise from unreliable and uninformative tests."),(0,o.kt)("li",{parentName:"ul"},"Good, because it brings the long-term effort required to maintain the modules\ninto line with the resources available."),(0,o.kt)("li",{parentName:"ul"},"Bad, because InfraSec Reserve will have to a lot of near-term work to remove\nthe tests."),(0,o.kt)("li",{parentName:"ul"},"Bad, because we'll have to delete all the tests, and we like tests.")))}c.isMDXComponent=!0},8209:(e,t,n)=>{n(7294)}}]);