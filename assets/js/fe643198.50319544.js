"use strict";(self.webpackChunkengineering_playbook=self.webpackChunkengineering_playbook||[]).push([[3084],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),u=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return o.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),d=u(n),f=r,b=d["".concat(l,".").concat(f)]||d[f]||s[f]||a;return n?o.createElement(b,i(i({ref:t},c),{},{components:n})):o.createElement(b,i({ref:t},c))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=d;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:r,i[1]=p;for(var u=2;u<a;u++)i[u]=n[u];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7170:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>s,frontMatter:()=>a,metadata:()=>p,toc:()=>u});var o=n(7462),r=(n(7294),n(3905));n(8209);const a={},i="Dependabot",p={unversionedId:"developing/cicd/dependabot",id:"developing/cicd/dependabot",title:"Dependabot",description:"Dependabot is a tool to automatically find updates to dependencies in our repos.",source:"@site/docs/developing/cicd/dependabot.md",sourceDirName:"developing/cicd",slug:"/developing/cicd/dependabot",permalink:"/docs/developing/cicd/dependabot",draft:!1,editUrl:"https://github.com/trussworks/Engineering-Playbook/edit/main/docs/developing/cicd/dependabot.md",tags:[],version:"current",frontMatter:{},sidebar:"about",previous:{title:"Standard Delivery Pipeline",permalink:"/docs/developing/cicd/delivery-pipeline"},next:{title:"Code Reviews",permalink:"/docs/developing/code-reviews/"}},l={},u=[{value:"Configuration",id:"configuration",level:2},{value:"Auto Approve",id:"auto-approve",level:3}],c={toc:u};function s(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"dependabot"},"Dependabot"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://dependabot.com/"},"Dependabot")," is a tool to automatically find updates to dependencies in our repos."),(0,r.kt)("h2",{id:"configuration"},"Configuration"),(0,r.kt)("p",null,"The Dependabot website has configuration for when/how often to run checks and configuration variables but you'll configure each repo in a file ",(0,r.kt)("inlineCode",{parentName:"p"},".dependabot/config.yml"),"."),(0,r.kt)("p",null,"Example from ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/trussworks/terraform-aws-alb-web-containers"},"Terraform AWS Alb Web Containers")," module:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yml"},'version: 1\nupdate_configs:\n  # Keep go modules up to date, batching pull requests weekly\n  - package_manager: "go:modules"\n    directory: "/"\n    update_schedule: "weekly"\n    # Apply default reviewer @trussworks/waddlers group to PRs\n    default_reviewers:\n      - "trussworks/waddlers"\n    # Apply dependencies label to PRs\n    default_labels:\n      - "dependencies"\n    automerged_updates:\n      - match:\n          dependency_type: "all"\n          update_type: "all"\n\n')),(0,r.kt)("p",null,"Dependabot can be configured to auto merge updates but respects branch protections. So, if you have automated tests, it should be stopped by a failure or if the branch requires a review from an owner."),(0,r.kt)("h3",{id:"auto-approve"},"Auto Approve"),(0,r.kt)("p",null,"If you decide that your repo can automatically merge any of these changes without a human approving or looking at them you can configure ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/features/actions"},"Github Actions")," to evaluate and auto approve these changes from Dependabot."),(0,r.kt)("p",null,"Note: We tried ",(0,r.kt)("a",{parentName:"p",href:"https://mergify.io/"},"mergify")," and found that it could not work around the branch protections that we strongly suggest."),(0,r.kt)("p",null,"We suggest using ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/hmarr/auto-approve-action"},"Auto-approve action")," in a file ",(0,r.kt)("inlineCode",{parentName:"p"},".github/workflows/auto-approve.yml"),"."),(0,r.kt)("p",null,"You do not need to set the ",(0,r.kt)("inlineCode",{parentName:"p"},"GITHUB_TOKEN")," as Github's bot should be able to run this for you."),(0,r.kt)("p",null,"Example configuration from ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/trussworks/terraform-aws-alb-web-containers"},"Terraform AWS Alb Web Containers"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yml"},"name: Auto approve\n\non:\n  pull_request\n\njobs:\n  auto-approve:\n    runs-on: ubuntu-latest\n    steps:\n    - uses: hmarr/auto-approve-action@v2.0.0\n      if: github.actor == 'dependabot[bot]' || github.actor == 'dependabot-preview[bot]'\n      with:\n        github-token: \"${{ secrets.GITHUB_TOKEN }}\"\n")))}s.isMDXComponent=!0},8209:(e,t,n)=>{n(7294)}}]);