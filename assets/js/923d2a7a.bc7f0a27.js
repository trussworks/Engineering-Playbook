"use strict";(self.webpackChunkengineering_playbook=self.webpackChunkengineering_playbook||[]).push([[6744],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var l=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,l,a=function(e,t){if(null==e)return{};var n,l,a={},r=Object.keys(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=l.createContext({}),u=function(e){var t=l.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return l.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},c=l.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=u(n),m=a,h=c["".concat(s,".").concat(m)]||c[m]||d[m]||r;return n?l.createElement(h,i(i({ref:t},p),{},{components:n})):l.createElement(h,i({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var u=2;u<r;u++)i[u]=n[u];return l.createElement.apply(null,i)}return l.createElement.apply(null,n)}c.displayName="MDXCreateElement"},17:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>u});var l=n(7462),a=(n(7294),n(3905));const r={},i="Installation",o={unversionedId:"developing/languages/ruby/installation",id:"developing/languages/ruby/installation",title:"Installation",description:"Context",source:"@site/docs/developing/languages/ruby/installation.md",sourceDirName:"developing/languages/ruby",slug:"/developing/languages/ruby/installation",permalink:"/docs/developing/languages/ruby/installation",draft:!1,editUrl:"https://github.com/trussworks/Engineering-Playbook/edit/main/docs/developing/languages/ruby/installation.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Ruby",permalink:"/docs/developing/languages/ruby/"},next:{title:"Learning Resources",permalink:"/docs/developing/learning/"}},s={},u=[{value:"Context",id:"context",level:2},{value:"The Trussel Way",id:"the-trussel-way",level:2},{value:"Setup Instructions",id:"setup-instructions",level:3},{value:"Install Prerequisites",id:"install-prerequisites",level:4},{value:"Install <code>asdf</code>",id:"install-asdf",level:4},{value:"Install asdf-ruby",id:"install-asdf-ruby",level:4},{value:"Enable a specific Ruby version",id:"enable-a-specific-ruby-version",level:4},{value:"Verify that it worked",id:"verify-that-it-worked",level:4},{value:"Install bundler",id:"install-bundler",level:4},{value:"What to do if you already have RVM or rbenv",id:"what-to-do-if-you-already-have-rvm-or-rbenv",level:3},{value:"Uninstall RVM",id:"uninstall-rvm",level:4},{value:"Uninstall rbenv",id:"uninstall-rbenv",level:4},{value:"Using Ruby via Docker",id:"using-ruby-via-docker",level:3}],p={toc:u};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,l.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"installation"},"Installation"),(0,a.kt)("h2",{id:"context"},"Context"),(0,a.kt)("p",null,"Although macOS ships with Ruby, it is not recommended to use it for development\nfor several reasons:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"It is usually an older version, and is only updated as part of a major macOS\nrelease.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Installing gems in the system Ruby requires the use of ",(0,a.kt)("inlineCode",{parentName:"p"},"sudo"),". In general, it\nshould be assumed that everything under ",(0,a.kt)("inlineCode",{parentName:"p"},"/System/Library")," is part of macOS and\nis administered by Apple. Files in those directories should not be modified."))),(0,a.kt)("h2",{id:"the-trussel-way"},"The Trussel Way"),(0,a.kt)("p",null,"We recommend installing and managing Ruby using asdf."),(0,a.kt)("p",null,"It's also possible to use Docker, instructions for which are at the bottom of this document."),(0,a.kt)("h3",{id:"setup-instructions"},"Setup Instructions"),(0,a.kt)("p",null,"If you don't have a specific project in mind, install the ",(0,a.kt)("a",{parentName:"p",href:"https://www.ruby-lang.org/en/news/"},"latest version that has been released")," and then configure that to be the global default version."),(0,a.kt)("p",null,"If you are planning to work on a specific project, you'll need to know what version of Ruby that project requires. The convention is for this to be defined in a project's ",(0,a.kt)("inlineCode",{parentName:"p"},"Gemfile"),". Look for a line that looks like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ruby"},'ruby "~> 3.1.2"\n')),(0,a.kt)("p",null,"In the above example, any version of Ruby in the range ",(0,a.kt)("inlineCode",{parentName:"p"},"3.1.2")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"3.1.99999")," will suffice."),(0,a.kt)("h4",{id:"install-prerequisites"},"Install Prerequisites"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Install ",(0,a.kt)("a",{parentName:"li",href:"https://brew.sh/"},"Homebrew")),(0,a.kt)("li",{parentName:"ul"},"Install Apple Command Line Tools using ",(0,a.kt)("inlineCode",{parentName:"li"},"xcode-select --install"))),(0,a.kt)("h4",{id:"install-asdf"},"Install ",(0,a.kt)("inlineCode",{parentName:"h4"},"asdf")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://asdf-vm.com"},"asdf")," is a program that manages multiple language versions. It uses language-specific plugins to define the specifics for each language it supports. We'll be using ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/asdf-vm/asdf-ruby"},"the officially supported plugin for Ruby")," in this guide."),(0,a.kt)("p",null,"Install asdf using homebrew:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-console"},"$ brew install asdf\n")),(0,a.kt)("p",null,"Then, configure your shell to load asdf. The following instructions are for ZSH (the default shell in macOS); for other shells or OSes, find the relevant section in ",(0,a.kt)("a",{parentName:"p",href:"https://asdf-vm.com/guide/getting-started.html#_3-install-asdf"},"the asdf installation documentation"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-console"},'$ echo -e "\\n. $(brew --prefix asdf)/libexec/asdf.sh" >> ${ZDOTDIR:-~}/.zshrc\n')),(0,a.kt)("p",null,"Close your shell and open a new one. Type ",(0,a.kt)("inlineCode",{parentName:"p"},"asdf")," and you should see something like the following:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-console"},"$ asdf\nversion: v0.10.2\n\nMANAGE PLUGINS\nasdf plugin add <name> [<git-url>]      Add a plugin from the plugin repo OR,\n                                        add a Git repo as a plugin by\n                                        specifying the name and repo url\n\n...\n")),(0,a.kt)("p",null,"If that is working, continue on to the next step."),(0,a.kt)("h4",{id:"install-asdf-ruby"},"Install asdf-ruby"),(0,a.kt)("p",null,"To add support for Ruby to asdf, add the plugin:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-console"},"$ asdf plugin add ruby https://github.com/asdf-vm/asdf-ruby.git\n")),(0,a.kt)("p",null,"Then ensure that you have a build environment setup to install Ruby. We're using the pre-built OpenSSL from homebrew as it more reliably installs than other options:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-console"},'$ export RUBY_CONFIGURE_OPTS="--with-openssl-dir=$(brew --prefix openssl@1.1)"\n')),(0,a.kt)("p",null,"Then you can install the specific version of Ruby you identified earlier:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-console"},"$ asdf install ruby 3.1.2\n")),(0,a.kt)("p",null,"This command will install the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/rbenv/ruby-build"},"ruby-build")," tool, which it will then use to compile and setup the version of Ruby specified. This will take a few minutes. If you have issues, ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/rbenv/ruby-build/wiki#troubleshooting"},"the ruby-build documentation")," has some helpful tips."),(0,a.kt)("p",null,"Close your terminal and open another one to reload the Ruby configuration."),(0,a.kt)("h4",{id:"enable-a-specific-ruby-version"},"Enable a specific Ruby version"),(0,a.kt)("p",null,"Once you have installed a version of Ruby, you'll want to set that as the version for use by your project."),(0,a.kt)("p",null,"To set the version to use within the current directory (which will be stored in a ",(0,a.kt)("inlineCode",{parentName:"p"},".tool-versions")," file):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-console"},"$ asdf local ruby 3.1.2\n")),(0,a.kt)("p",null,"To set the version to use globally by default (handy for ad-hoc use):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-console"},"$ asdf global ruby 3.1.2\n")),(0,a.kt)("h4",{id:"verify-that-it-worked"},"Verify that it worked"),(0,a.kt)("p",null,"First, make sure that the ",(0,a.kt)("inlineCode",{parentName:"p"},"ruby")," command is being resolved to one provided by asdf:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-console"},"$ which ruby\n/Users/<USERNAME>/.asdf/shims/ruby\n")),(0,a.kt)("p",null,"If you see something like ",(0,a.kt)("inlineCode",{parentName:"p"},"/usr/bin/ruby"),", then your shell isn't picking up your asdf configuration."),(0,a.kt)("p",null,"Check that you have the correct Ruby installed:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-console"},"$ ruby --version\nruby 3.1.2p20 (2022-04-12 revision 4491bb740a) [x86_64-darwin21]\n")),(0,a.kt)("h4",{id:"install-bundler"},"Install bundler"),(0,a.kt)("p",null,"Almost all Ruby projects will need bundler installed. You can do that with:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-console"},"$ gem install bundler\n")),(0,a.kt)("p",null,"At this point, you can probably switch over to your project's setup instructions. They will usually start off by telling you to run ",(0,a.kt)("inlineCode",{parentName:"p"},"bundle install"),"."),(0,a.kt)("h3",{id:"what-to-do-if-you-already-have-rvm-or-rbenv"},"What to do if you already have RVM or rbenv"),(0,a.kt)("p",null,"We recommend uninstalling them before running the script."),(0,a.kt)("h4",{id:"uninstall-rvm"},"Uninstall RVM"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"rvm implode\n")),(0,a.kt)("p",null,"Other directories that might need to be removed:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"~/.rvm")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"~/.rvmrc")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"/etc/rvm"))),(0,a.kt)("p",null,"Remove any ",(0,a.kt)("inlineCode",{parentName:"p"},"RVM"),"-related lines from the following files:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"~/.bashrc")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"~/.bash_profile")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"~/.profile")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"~/.zshrc")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"~/.zprofile")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"~/.zshenv"))),(0,a.kt)("p",null,"Quit and relaunch Terminal/iTerm"),(0,a.kt)("h4",{id:"uninstall-rbenv"},"Uninstall rbenv"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"rm -rf ~/.rbenv\n")),(0,a.kt)("p",null,"or"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"brew uninstall rbenv\n")),(0,a.kt)("p",null,"Remove any ",(0,a.kt)("inlineCode",{parentName:"p"},"rbenv"),"-related lines from the following files:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"~/.bashrc")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"~/.bash_profile")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"~/.profile")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"~/.zshrc")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"~/.zprofile")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"~/.zshenv"))),(0,a.kt)("p",null,"Quit and relaunch Terminal/iTerm"),(0,a.kt)("h3",{id:"using-ruby-via-docker"},"Using Ruby via Docker"),(0,a.kt)("p",null,"Using Docker makes sense if :"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"You don't use Ruby regularly, and only need it occasionally, such as to\nreview candidate work samples"),(0,a.kt)("li",{parentName:"ul"},"You don't want to install anything locally")),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/trussworks/Engineering-Playbook/tree/master/developing/docker#installation"},"Install Docker")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"cd")," into the directory of the Ruby project you want to work with"),(0,a.kt)("li",{parentName:"ol"},"Run a bash shell in Docker: ",(0,a.kt)("inlineCode",{parentName:"li"},"docker run -it --rm=true -v $PWD:$PWD -w $PWD ruby:${DESIRED_RUBY_VERSION}-slim bash"))),(0,a.kt)("p",null,"For example, if you want an image with Ruby 2.6.4, you would run:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"docker run -it --rm=true -v $PWD:$PWD -w $PWD ruby:2.6.4-slim bash\n")))}d.isMDXComponent=!0}}]);