"use strict";(self.webpackChunkengineering_playbook=self.webpackChunkengineering_playbook||[]).push([[9033],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),k=p(n),d=i,c=k["".concat(s,".").concat(d)]||k[d]||m[d]||r;return n?a.createElement(c,o(o({ref:t},u),{},{components:n})):a.createElement(c,o({ref:t},u))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=k;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var p=2;p<r;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(7294),i=n(6010);const r="tabItem_Ymn6";function o(e){let{children:t,hidden:n,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,i.Z)(r,o),hidden:n},t)}},5488:(e,t,n)=>{n.d(t,{Z:()=>d});var a=n(7462),i=n(7294),r=n(6010),o=n(2389),l=n(7392),s=n(7094),p=n(2466);const u="tabList__CuJ",m="tabItem_LNqP";function k(e){var t,n;const{lazy:o,block:k,defaultValue:d,values:c,groupId:h,className:y}=e,g=i.Children.map(e.children,(e=>{if((0,i.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),N=null!=c?c:g.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),f=(0,l.l)(N,((e,t)=>e.value===t.value));if(f.length>0)throw new Error('Docusaurus error: Duplicate values "'+f.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const b=null===d?d:null!=(t=null!=d?d:null==(n=g.find((e=>e.props.default)))?void 0:n.props.value)?t:g[0].props.value;if(null!==b&&!N.some((e=>e.value===b)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+b+'" but none of its children has the corresponding value. Available values are: '+N.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:w,setTabGroupChoices:v}=(0,s.U)(),[C,E]=(0,i.useState)(b),T=[],{blockElementScrollPositionUntilNextRender:I}=(0,p.o5)();if(null!=h){const e=w[h];null!=e&&e!==C&&N.some((t=>t.value===e))&&E(e)}const S=e=>{const t=e.currentTarget,n=T.indexOf(t),a=N[n].value;a!==C&&(I(t),E(a),null!=h&&v(h,String(a)))},A=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{var a;const t=T.indexOf(e.currentTarget)+1;n=null!=(a=T[t])?a:T[0];break}case"ArrowLeft":{var i;const t=T.indexOf(e.currentTarget)-1;n=null!=(i=T[t])?i:T[T.length-1];break}}null==(t=n)||t.focus()};return i.createElement("div",{className:(0,r.Z)("tabs-container",u)},i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":k},y)},N.map((e=>{let{value:t,label:n,attributes:o}=e;return i.createElement("li",(0,a.Z)({role:"tab",tabIndex:C===t?0:-1,"aria-selected":C===t,key:t,ref:e=>T.push(e),onKeyDown:A,onFocus:S,onClick:S},o,{className:(0,r.Z)("tabs__item",m,null==o?void 0:o.className,{"tabs__item--active":C===t})}),null!=n?n:t)}))),o?(0,i.cloneElement)(g.filter((e=>e.props.value===C))[0],{className:"margin-top--md"}):i.createElement("div",{className:"margin-top--md"},g.map(((e,t)=>(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==C})))))}function d(e){const t=(0,o.Z)();return i.createElement(k,(0,a.Z)({key:String(t)},e))}},8612:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>d,frontMatter:()=>l,metadata:()=>p,toc:()=>m});var a=n(7462),i=(n(7294),n(3905)),r=n(5488),o=n(5162);const l={title:"YubiKey Configuration Guide"},s="YubiKey Configuration Guide",p={unversionedId:"infrasec/tutorials/yubikey-configuration",id:"infrasec/tutorials/yubikey-configuration",title:"YubiKey Configuration Guide",description:"- Introduction",source:"@site/docs/infrasec/tutorials/yubikey-configuration.mdx",sourceDirName:"infrasec/tutorials",slug:"/infrasec/tutorials/yubikey-configuration",permalink:"/docs/infrasec/tutorials/yubikey-configuration",draft:!1,editUrl:"https://github.com/trussworks/Engineering-Playbook/edit/main/docs/infrasec/tutorials/yubikey-configuration.mdx",tags:[],version:"current",frontMatter:{title:"YubiKey Configuration Guide"},sidebar:"tutorialSidebar",previous:{title:"Deploying your first AWS Lambda Function with Go and Terraform",permalink:"/docs/infrasec/tutorials/your_first_lambda_function"},next:{title:"Single Sign-On",permalink:"/docs/infrasec/tutorials/yubikey-sso"}},u={},m=[{value:"Introduction",id:"introduction",level:2},{value:"Purchasing and Distribution",id:"purchasing-and-distribution",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Hardware Requirements",id:"hardware-requirements",level:3},{value:"Software Requirements",id:"software-requirements",level:3},{value:"Configuring Your Environment",id:"configuring-your-environment",level:2},{value:"Using pinentry (optional)",id:"using-pinentry-optional",level:3},{value:"Verifying Your YubiKey",id:"verifying-your-yubikey",level:2},{value:"Setting the YubiKey User and Admin PIN codes",id:"setting-the-yubikey-user-and-admin-pin-codes",level:2},{value:"Key Generation",id:"key-generation",level:2},{value:"Generating a GPG Private Key",id:"generating-a-gpg-private-key",level:3},{value:"Add a (S) signing subkey",id:"add-a-s-signing-subkey",level:3},{value:"Add an (A) authentication subkey",id:"add-an-a-authentication-subkey",level:3},{value:"Check Your Keys",id:"check-your-keys",level:2},{value:"Deleting a secret key",id:"deleting-a-secret-key",level:2},{value:"Creating Backups",id:"creating-backups",level:2},{value:"Create a backup of your secret keys (optional)",id:"create-a-backup-of-your-secret-keys-optional",level:3},{value:"Create a backup of your public key (optional)",id:"create-a-backup-of-your-public-key-optional",level:3},{value:"Create a revocation certificate (optional)",id:"create-a-revocation-certificate-optional",level:3},{value:"Configuring the YubiKey",id:"configuring-the-yubikey",level:2},{value:"Importing the keys to your YubiKey",id:"importing-the-keys-to-your-yubikey",level:3},{value:"Adding Additional Email Addresses",id:"adding-additional-email-addresses",level:2},{value:"UIDs and the primary key",id:"uids-and-the-primary-key",level:3},{value:"Configuring SSH",id:"configuring-ssh",level:2},{value:"Configuring git commit Signing",id:"configuring-git-commit-signing",level:2},{value:"Configuring Github",id:"configuring-github",level:2},{value:"Using Github Desktop",id:"using-github-desktop",level:3},{value:"Verifying your configuration",id:"verifying-your-configuration",level:2},{value:"Deleting local secret key material",id:"deleting-local-secret-key-material",level:3},{value:"Subkey stubs",id:"subkey-stubs",level:3},{value:"Using The YubiKey",id:"using-the-yubikey",level:2},{value:"Signing git commits",id:"signing-git-commits",level:3},{value:"Enabling touch-only mode (optional)",id:"enabling-touch-only-mode-optional",level:3},{value:"Disabling OTP (One Time Password)",id:"disabling-otp-one-time-password",level:3},{value:"GitHub Apps",id:"github-apps",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2}],k={toc:m};function d(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"yubikey-configuration-guide"},"YubiKey Configuration Guide"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#introduction"},"Introduction")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#purchasing-and-distribution"},"Purchasing and Distribution")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#prerequisites"},"Prerequisites"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#hardware-requirements"},"Hardware Requirements")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#software-requirements"},"Software Requirements")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#configuring-your-environment"},"Configuring Your Environment"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#using-pinentry-optional"},"Using pinentry (optional)")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#verifying-your-yubikey"},"Verifying Your YubiKey")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#setting-the-yubikey-user-and-admin-pin-codes"},"Setting the YubiKey User and Admin PIN codes")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#key-generation"},"Key Generation"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#generating-a-gpg-private-key"},"Generating a GPG Private Key")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#add-a-s-signing-subkey"},"Add a (S) signing subkey")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#add-an-a-authentication-subkey"},"Add an (A) authentication subkey")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#check-your-keys"},"Check Your Keys")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#deleting-a-secret-key"},"Deleting a secret key")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#creating-backups"},"Creating Backups"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#create-a-backup-of-your-secret-keys-optional"},"Create a backup of your secret keys (optional)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#create-a-backup-of-your-public-key-optional"},"Create a backup of your public key (optional)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#create-a-revocation-certificate-optional"},"Create a revocation certificate (optional)")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#configuring-the-yubikey"},"Configuring the YubiKey"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#importing-the-keys-to-your-yubikey"},"Importing the keys to your YubiKey")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#adding-additional-email-addresses"},"Adding Additional Email Addresses"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#uids-and-the-primary-key"},"UIDs and the primary key")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#configuring-ssh"},"Configuring SSH")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#configuring-git-commit-signing"},"Configuring git commit Signing")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#configuring-github"},"Configuring Github"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#using-github-desktop"},"Using Github Desktop")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#verifying-your-configuration"},"Verifying your configuration"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#deleting-local-secret-key-material"},"Deleting local secret key material")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#subkey-stubs"},"Subkey stubs")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#using-the-yubikey"},"Using The YubiKey"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#signing-git-commits"},"Signing git commits")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#enabling-touch-only-mode-optional"},"Enabling touch-only mode (optional)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#disabling-otp-one-time-password"},"Disabling OTP (One Time Password)")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#github-apps"},"GitHub Apps")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#troubleshooting"},"Troubleshooting"))),(0,i.kt)("h2",{id:"introduction"},"Introduction"),(0,i.kt)("p",null,"The YubiKey is a hardware authentication device manufactured by Yubico that supports one-time passwords, public-key encryption and authentication, and the Universal 2nd Factor (U2F) and FIDO2 protocols developed by the FIDO Alliance. It allows users to securely log into their accounts by emitting one-time passwords or using a FIDO-based public/private key pair generated by the device. YubiKey also allows for storing static passwords for use at sites that do not support one-time passwords. Some password managers, including 1Password, support YubiKey."),(0,i.kt)("p",null,"The YubiKey will allow us to sign our GitHub commits, which may be required by some contracts."),(0,i.kt)("p",null,"If you have problems or questions during the configuration process, check in with #infrasec-chat on the Truss Slack."),(0,i.kt)("p",null,"PIN codes and passphrases may be cached for a short duration at any point during the configuration process. You may not always be prompted to enter these."),(0,i.kt)("h2",{id:"purchasing-and-distribution"},"Purchasing and Distribution"),(0,i.kt)("p",null,"It is currently recommended that distributed Trussels purchase their YubiKey directly from either Amazon or ",(0,i.kt)("a",{parentName:"p",href:"https://www.yubico.com/store/"},"Yubico"),". The SF office may opt to purchase some YubiKeys in bulk for local Trussels, but this has not been decided yet. Bulk purchasing of YubiKeys yields a savings of $2.40 per $60 YubiKey."),(0,i.kt)("p",null,"If ordering a YubiKey for a project, check with your project on how to categorize the expense in Expensify. Otherwise, use the ",(0,i.kt)("inlineCode",{parentName:"p"},"Computer Equipment")," category."),(0,i.kt)("p",null,"You should purchase a YubiKey 5 Series (",(0,i.kt)("a",{parentName:"p",href:"https://www.amazon.com/Yubico-YubiKey-Factor-Authentication-Security/dp/B07HBCTYP1/"},"5C"),", ",(0,i.kt)("a",{parentName:"p",href:"https://www.amazon.com/Yubico-YubiKey-Factor-Authentication-Security/dp/B07HBTBJ5S/"},"5C Nano"),", ",(0,i.kt)("a",{parentName:"p",href:"https://www.amazon.com/Yubico-YubiKey-5Ci-Authentication-Connectors/dp/B07WGJ1DNJ/"},"5ci"),")"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"5Ci")," supports both USB C and Lighting ports, which is good if you have an iPhone."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"5C")," and ",(0,i.kt)("strong",{parentName:"li"},"5C Nano")," only support USB C and come in different form factors.")),(0,i.kt)("p",null,"If you have a YubiKey Series 4 or a YubiKey 5 NEO, you ",(0,i.kt)("em",{parentName:"p"},"should")," upgrade to a 5 Series, unless you have a specific need for the older model. The YubiKey 5 series will provide stronger security and can support larger encryption keys."),(0,i.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,i.kt)("h3",{id:"hardware-requirements"},"Hardware Requirements"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"YubiKey 5 Series (",(0,i.kt)("a",{parentName:"li",href:"https://www.amazon.com/Yubico-YubiKey-Factor-Authentication-Security/dp/B07HBCTYP1/"},"5C"),", ",(0,i.kt)("a",{parentName:"li",href:"https://www.amazon.com/Yubico-YubiKey-Factor-Authentication-Security/dp/B07HBTBJ5S/"},"5C Nano"),", ",(0,i.kt)("a",{parentName:"li",href:"https://www.amazon.com/Yubico-YubiKey-5Ci-Authentication-Connectors/dp/B07WGJ1DNJ/"},"5ci"),")"),(0,i.kt)("li",{parentName:"ul"},"YubiKey 4 Series and 5 NEO are acceptable, but not preferred. Keys are limited to 2048 bits")),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"FIPS based YubiKeys ship with security vulnerabilities. Do not purchase a FIPS based YubiKey for work performed at Truss. FIPS YubiKey models are specifically called YubiKey FIPS and not part of the 5 series listed above.")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.yubico.com/support/security-advisories/ysa-2019-02/"},"Yubico Security Advisory")," about FIPS keys"),(0,i.kt)("h3",{id:"software-requirements"},"Software Requirements"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"brew",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"ykman"),(0,i.kt)("li",{parentName:"ul"},"ykpers"))),(0,i.kt)("li",{parentName:"ul"},"brew cask",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"gpg-suite-no-mail")))),(0,i.kt)("p",null,"Configure your environment with:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-console"},"brew install ykman ykpers\nbrew install --cask gpg-suite-no-mail\n")),(0,i.kt)("p",null,"If xcode is not up to date, you will be prompted to install it with: ",(0,i.kt)("inlineCode",{parentName:"p"},"xcode-select --install")),(0,i.kt)("h2",{id:"configuring-your-environment"},"Configuring Your Environment"),(0,i.kt)("p",null,"Enable SSH support by default when launching gpg-agent:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"echo enable-ssh-support >> ~/.gnupg/gpg-agent.conf\n")),(0,i.kt)("p",null,"Add the following to your shell profile ",(0,i.kt)("inlineCode",{parentName:"p"},".bashrc"),", ",(0,i.kt)("inlineCode",{parentName:"p"},".zshrc"),", etc."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'# allow GPG to sign in the terminal\nGPG_TTY=$(tty)\nexport GPG_TTY\n\n# Expose the SSH agent to the GPG agent.\nSSH_AUTH_SOCK="${HOME}/.gnupg/S.gpg-agent.ssh"\nexport SSH_AUTH_SOCK\n\n# Define a function to manually reset the GPG and SSH agent.\nyubikey-init () {\n    if pgrep gpg-agent > /dev/null; then killall gpg-agent; fi\n    if pgrep ssh-agent > /dev/null; then killall ssh-agent; fi\n    gpg --card-status all &> /dev/null\n}\n')),(0,i.kt)("p",null,"Run ",(0,i.kt)("inlineCode",{parentName:"p"},"yubikey-init")," to manually reset the GPG agent whenever you need to, such as after re-inserting\nyour YubiKey into your computer."),(0,i.kt)("p",null,"To configure the GPG agent to use your YubiKey upon logging into the system, create a new file at\n",(0,i.kt)("inlineCode",{parentName:"p"},"~/Library/LaunchAgents/gpg-agent.plist")," with the following contents (",(0,i.kt)("em",{parentName:"p"},"Note: this assumes you are\nusing GPG Suite, which can be installed using ",(0,i.kt)("inlineCode",{parentName:"em"},"brew cask install gpg-suite-no-mail")),"):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},'<?xml version="1.0" encoding="UTF-8"?>\n<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">\n<plist version="1.0">\n<dict>\n    <key>Label</key>\n    <string>gpg-agent</string>\n    <key>ProgramArguments</key>\n    <array>\n        <string>/bin/bash</string>\n        <string>-c</string>\n        <string>\n            if pgrep gpg-agent > /dev/null; then killall gpg-agent; fi\n            if pgrep ssh-agent > /dev/null; then killall ssh-agent; fi\n            gpg --card-status all &> /dev/null\n        </string>\n    </array>\n    <key>RunAtLoad</key>\n    <true/>\n</dict>\n</plist>\n')),(0,i.kt)("p",null,"Regarding the use of ",(0,i.kt)("inlineCode",{parentName:"p"},"gpg --card-status all &> /dev/null"),", this seems to be the only reliable\napproach we have found to get gpg-agent to use YubiKey when running Big Sur. This command starts\ngpg-agent as a daemon if it is not currently running, so it is an implicit way of starting\ngpg-agent. Otherwise, using something like ",(0,i.kt)("inlineCode",{parentName:"p"},"gpg-agent --daemon")," would work equally as well."),(0,i.kt)("h3",{id:"using-pinentry-optional"},"Using pinentry (optional)"),(0,i.kt)("p",null,"Instead of prompting you in a terminal, you can have gpg-agent use an\nexternal program.  This might be useful if you want to use your editor\nfor commits."),(0,i.kt)(r.Z,{groupID:"pinentry-mac",mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"intel",label:"Intel Based Mac",mdxType:"TabItem"},(0,i.kt)("p",null,"Your homebrew path may be different for pinentry-mac than below. You can confirm it with ",(0,i.kt)("inlineCode",{parentName:"p"},"which pinentry-mac")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-console"},"brew install pinentry-mac\necho 'pinentry-program /usr/local/bin/pinentry-mac' >> \\\n    ~/.gnupg/gpg-agent.conf\ngpgconf --kill gpg-agent\ngpg --card-status all &> /dev/null\n"))),(0,i.kt)(o.Z,{value:"m1-mac",label:"M1 Based Mac",mdxType:"TabItem"},(0,i.kt)("p",null,"If you are on an ",(0,i.kt)("strong",{parentName:"p"},"M1 based Macbook")," then your homebrew path will likely be different for pinentry-mac. You can confirm it with ",(0,i.kt)("inlineCode",{parentName:"p"},"which pinentry-mac")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-console"},"brew install pinentry-mac\necho 'pinentry-program /opt/homebrew/bin/pinentry-mac' >> \\\n    ~/.gnupg/gpg-agent.conf\ngpgconf --kill gpg-agent\ngpg --card-status all &> /dev/null\n")))),(0,i.kt)("p",null,"If you use this, you do not need to set ",(0,i.kt)("inlineCode",{parentName:"p"},"GPG_TTY"),"."),(0,i.kt)("h2",{id:"verifying-your-yubikey"},"Verifying Your YubiKey"),(0,i.kt)("p",null,"To verify a YubiKey is genuine, open a ",(0,i.kt)("a",{parentName:"p",href:"https://support.yubico.com/support/solutions/articles/15000009591-how-to-confirm-your-yubico-device-is-genuine-with-u2f"},"browser with U2F support")," to ",(0,i.kt)("a",{parentName:"p",href:"https://www.yubico.com/genuine/"},"https://www.yubico.com/genuine/"),". (Chrome, FireFox and Safari work). Insert a Yubico device, and select Verify Device to begin the process. Touch the YubiKey when prompted, and if asked, allow it to see the make and model of the device. If you see Verification complete, the device is authentic."),(0,i.kt)("p",null,"This website verifies the YubiKey's device attestation certificates signed by a set of Yubico CAs, and helps mitigate ",(0,i.kt)("a",{parentName:"p",href:"https://media.defcon.org/DEF%20CON%2025/DEF%20CON%2025%20presentations/DEF%20CON%2025%20-%20r00killah-and-securelyfitz-Secure-Tokin-and-Doobiekeys.pdf"},"supply chain attacks"),"."),(0,i.kt)("h2",{id:"setting-the-yubikey-user-and-admin-pin-codes"},"Setting the YubiKey User and Admin PIN codes"),(0,i.kt)("p",null,"The YubiKey ships with a default User PIN of ",(0,i.kt)("inlineCode",{parentName:"p"},"123456")," and a default Admin PIN of ",(0,i.kt)("inlineCode",{parentName:"p"},"12345678"),". For security purposes, these PIN codes must be changed before use."),(0,i.kt)("p",null,"The User PIN is the PIN that will be used on a daily basis when signing commits or authenticating. The Admin PIN is used to make changes to the YubiKey itself, such as when enabling or disabling touch-mode."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Insert your YubiKey into the USB port."),(0,i.kt)("li",{parentName:"ol"},"Enter the command: ",(0,i.kt)("inlineCode",{parentName:"li"},"gpg --card-edit")),(0,i.kt)("li",{parentName:"ol"},"Enter the command: ",(0,i.kt)("inlineCode",{parentName:"li"},"admin")),(0,i.kt)("li",{parentName:"ol"},"Enter the command: ",(0,i.kt)("inlineCode",{parentName:"li"},"passwd")),(0,i.kt)("li",{parentName:"ol"},"To change the Admin PIN enter: ",(0,i.kt)("inlineCode",{parentName:"li"},"3")),(0,i.kt)("li",{parentName:"ol"},"Enter the default PIN of ",(0,i.kt)("inlineCode",{parentName:"li"},"12345678")),(0,i.kt)("li",{parentName:"ol"},"Enter your new 8 digit Admin PIN, add it to 1Password, and confirm it."),(0,i.kt)("li",{parentName:"ol"},"To change the User PIN enter: ",(0,i.kt)("inlineCode",{parentName:"li"},"1")),(0,i.kt)("li",{parentName:"ol"},"Enter the default PIN of ",(0,i.kt)("inlineCode",{parentName:"li"},"123456")),(0,i.kt)("li",{parentName:"ol"},"Enter your new 6 digit User PIN, add it to 1Password, and confirm it."),(0,i.kt)("li",{parentName:"ol"},"Enter the command: ",(0,i.kt)("inlineCode",{parentName:"li"},"q")),(0,i.kt)("li",{parentName:"ol"},"Enter the command: ",(0,i.kt)("inlineCode",{parentName:"li"},"name")),(0,i.kt)("li",{parentName:"ol"},"Enter your surname and given name (these should match the name provided when you generate your certificate)"),(0,i.kt)("li",{parentName:"ol"},"Enter the command ",(0,i.kt)("inlineCode",{parentName:"li"},"q")," to exit the admin menu")),(0,i.kt)("p",null,"If at any point you make a mistake and need to reset your YubiKey PIN(s), you can do so with the command: ",(0,i.kt)("inlineCode",{parentName:"p"},"ykman openpgp reset")),(0,i.kt)("h2",{id:"key-generation"},"Key Generation"),(0,i.kt)("h3",{id:"generating-a-gpg-private-key"},"Generating a GPG Private Key"),(0,i.kt)("p",null,"This will generate the secret key."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Enter the GPG command: ",(0,i.kt)("inlineCode",{parentName:"li"},"gpg --expert --full-gen-key")),(0,i.kt)("li",{parentName:"ol"},'When prompted to specify the key type, enter 1 (for "RSA and RSA") and press Enter'),(0,i.kt)("li",{parentName:"ol"},"Specify the size of key you want to generate. This key size will also apply to subkey size. Do one of the following:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"For a YubiKey 4 series, enter 2048 and press Enter"),(0,i.kt)("li",{parentName:"ul"},"For a YubiKey 5 series, enter 4096 and press Enter"))),(0,i.kt)("li",{parentName:"ol"},"Specify an indefinite expiration date of the key by pressing press Enter. Verify the expiration date when prompted"),(0,i.kt)("li",{parentName:"ol"},"Now you will enter your user information. Enter your Real Name and press Enter. Be sure to enter both your first and last name"),(0,i.kt)("li",{parentName:"ol"},"Enter your ",(0,i.kt)("inlineCode",{parentName:"li"},"@truss.works")," Email Address and press Enter. If you do not perform commits with your @truss.works email address, we\u2019ll add your GitHub email address to the key in a later step."),(0,i.kt)("li",{parentName:"ol"},"If desired, enter a Comment about this key (e.g., \u201cwork\u201d), and press Enter. (To leave the comment blank, just press Enter)"),(0,i.kt)("li",{parentName:"ol"},"Review the information you entered, make any changes if necessary. If all information is correct, enter O (for Okay) and press Enter"),(0,i.kt)("li",{parentName:"ol"},"A dialog box is displayed so you can enter the passphrase for your key. While the key is being generated, move your mouse around or type on the keyboard to gain enough entropy. When the key has been generated, you will see several messages displayed. Make a note of the key ID, that is displayed in the message such as ",(0,i.kt)("inlineCode",{parentName:"li"},"gpg: key 1234ABC marked as ultimately trusted"),". The key ID in this case is 1234ABC and you will need this key ID to perform other operations.")),(0,i.kt)("p",null,"If at any point you forget the key ID, enter ",(0,i.kt)("inlineCode",{parentName:"p"},"gpg --list-signatures")," to display it. If the key ID isn't displayed during the previous command it will be when you run ",(0,i.kt)("inlineCode",{parentName:"p"},"gpg --list-signatures"),"."),(0,i.kt)("p",null,"It\u2019s time to add the subkeys. Some of these may already be created. You can check what\u2019s been created by checking your keys."),(0,i.kt)("h3",{id:"add-a-s-signing-subkey"},"Add a (S) signing subkey"),(0,i.kt)("p",null,"This will be used for git commit and tag signing."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Enter the GPG command: ",(0,i.kt)("inlineCode",{parentName:"li"},"gpg --expert --edit-key 1234ABC")," (where 1234ABC is the key ID of your key)"),(0,i.kt)("li",{parentName:"ol"},"Enter the command: ",(0,i.kt)("inlineCode",{parentName:"li"},"addkey")),(0,i.kt)("li",{parentName:"ol"},"You are prompted to specify the type of key. Enter 4 for RSA (sign only)"),(0,i.kt)("li",{parentName:"ol"},"Specify the size of the key that you want to generate. Do one of the following:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"For a YubiKey 4 series, enter 2048 and press Enter"),(0,i.kt)("li",{parentName:"ul"},"For a YubiKey 5 series, enter 4096 and press Enter"))),(0,i.kt)("li",{parentName:"ol"},"Specify the expiration of the authentication key (this should be the same expiration as the key). Unless you have a specific need, this should be set to indefinite"),(0,i.kt)("li",{parentName:"ol"},"When prompted to save your changes, enter y (yes)",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"If prompted to replace the existing key, select no."))),(0,i.kt)("li",{parentName:"ol"},"Enter the passphrase for the key. Note that this is the passphrase, and not the User PIN or Admin PIN")),(0,i.kt)("h3",{id:"add-an-a-authentication-subkey"},"Add an (A) authentication subkey"),(0,i.kt)("p",null,"This subkey will be used to pull private git repos via SSH and may be used to authenticate to any SSH host."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Enter the GPG command: ",(0,i.kt)("inlineCode",{parentName:"p"},"gpg --expert --edit-key 1234ABC")," (where 1234ABC is the key ID of your key)")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Enter the command: ",(0,i.kt)("inlineCode",{parentName:"p"},"addkey"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"You are prompted to specify the type of key. Enter 8 for RSA")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"To add an authentication key, toggle all options until Authenticate is the only selection, and then Q if you are finished."),(0,i.kt)("p",{parentName:"li"},"This is interface has a unique design where you need to toggle things on and off to get the desired result.\nThe default state shows ",(0,i.kt)("strong",{parentName:"p"},"Sign Encrypt")," active."),(0,i.kt)("img",{src:"images/yubikey-sign-encrypt.png",alt:"default state",width:"400"}),(0,i.kt)("p",{parentName:"li"},"Enter ",(0,i.kt)("inlineCode",{parentName:"p"},"A")," to enable ",(0,i.kt)("strong",{parentName:"p"},"Authenticate"),". Enter ",(0,i.kt)("inlineCode",{parentName:"p"},"E")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"S")," (separately) to disable ",(0,i.kt)("strong",{parentName:"p"},"Sign")," and ",(0,i.kt)("strong",{parentName:"p"},"Encrypt"),"."),(0,i.kt)("img",{src:"images/yubikey-select-authenticate.png",alt:"authenticate",width:"400"})),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Hit ",(0,i.kt)("inlineCode",{parentName:"p"},"Q")," to finish.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Specify the size of the key that you want to generate. Do one of the following:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"For a YubiKey 4 series, enter 2048 and press Enter"),(0,i.kt)("li",{parentName:"ul"},"For a YubiKey 5 series, enter 4096 and press Enter"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Specify the expiration of the authentication key (this should be the same expiration as the key). Unless you have a specific need, this should be set to indefinite")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"When prompted to save your changes, enter y (yes)"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"If prompted to replace the existing key, select no."))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Enter the passphrase for the key. Note that this is the passphrase, and not the User PIN or Admin PIN"))),(0,i.kt)("h2",{id:"check-your-keys"},"Check Your Keys"),(0,i.kt)("p",null,"After adding the subkeys, enter the GPG command: ",(0,i.kt)("inlineCode",{parentName:"p"},"gpg --expert --edit-key 1234ABC")," (where 1234ABC is the key ID of your key)"),(0,i.kt)("p",null,"The optimal output should look similar to this, showing an individual subkey for ",(0,i.kt)("strong",{parentName:"p"},"E (Encrypt)"),", ",(0,i.kt)("strong",{parentName:"p"},"A (Authenticate)"),", and ",(0,i.kt)("strong",{parentName:"p"},"S (Sign)")," in the YubiKey keychain."),(0,i.kt)("img",{src:"images/yubikey-check-keys.png",alt:"keycheck",width:"500"}),(0,i.kt)("h2",{id:"deleting-a-secret-key"},"Deleting a secret key"),(0,i.kt)("p",null,"If you add one too many keys, you can delete them."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Enter the GPG command: ",(0,i.kt)("inlineCode",{parentName:"li"},"gpg --edit-key 1234ABC")," (where 1234ABC is the key ID of your key)"),(0,i.kt)("li",{parentName:"ol"},"Enter ",(0,i.kt)("inlineCode",{parentName:"li"},"key 1")," (This will select the first key but you can select any key)"),(0,i.kt)("li",{parentName:"ol"},"After pressing enter an ",(0,i.kt)("em",{parentName:"li"},"asterisk")," will appear next to that key"),(0,i.kt)("li",{parentName:"ol"},"Enter the command: ",(0,i.kt)("inlineCode",{parentName:"li"},"delkey")),(0,i.kt)("li",{parentName:"ol"},"It will then ask if you want to delete the key. Select yes"),(0,i.kt)("li",{parentName:"ol"},"Enter your passphrase"),(0,i.kt)("li",{parentName:"ol"},"Verify the key is deleted"),(0,i.kt)("li",{parentName:"ol"},"Repeat if multiple keys need to be deleted")),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Note that if you have not imported the keys to your YubiKey yet then your output will not include those card-no details.")),(0,i.kt)("h2",{id:"creating-backups"},"Creating Backups"),(0,i.kt)("p",null,"These steps are optional and will help to configure a new YubiKey should yours become lost or damaged. While you could start from scratch, and should in some cases, this will provide the quickest path to recovery."),(0,i.kt)("h3",{id:"create-a-backup-of-your-secret-keys-optional"},"Create a backup of your secret keys (optional)"),(0,i.kt)("p",null,"This will create a backup of the secret key and subkeys."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Insert the YubiKey into the USB port"),(0,i.kt)("li",{parentName:"ol"},"Enter the GPG command: ",(0,i.kt)("inlineCode",{parentName:"li"},"gpg --export-secret-key --armor 1234ABC > /path/to/secret.key")," (where 1234ABC is the key ID of your key)"),(0,i.kt)("li",{parentName:"ol"},"Enter the GPG command: ",(0,i.kt)("inlineCode",{parentName:"li"},"gpg --export-secret-subkeys --armor 1234ABC > /path/to/secret.sub.key")," (where 1234ABC is the key ID of your key)"),(0,i.kt)("li",{parentName:"ol"},"Store these files in 1Password and delete them from your system.")),(0,i.kt)("h3",{id:"create-a-backup-of-your-public-key-optional"},"Create a backup of your public key (optional)"),(0,i.kt)("p",null,"Save the public key in 1Password for reference. This is not secret material, but it can be helpful to have it saved alongside the secret key material. You can export it using the following command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-console"},"gpg --export --armor 1234ABC > public.key\n")),(0,i.kt)("h3",{id:"create-a-revocation-certificate-optional"},"Create a revocation certificate (optional)"),(0,i.kt)("p",null,"This will allow you to revoke the key should your secret key becomes lost or compromised. This step is not required in our current use case because we\u2019re not uploading our certificates to a public keyserver. This may be required for future use at some point, so we\u2019ll leave this in place for the time being."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Enter the command: ",(0,i.kt)("inlineCode",{parentName:"li"},"gpg --gen-revoke 1234ABC > 1234ABC-revoke-cert.asc")," (where 1234ABC is the key ID of your key)"),(0,i.kt)("li",{parentName:"ol"},"Enter the command: ",(0,i.kt)("inlineCode",{parentName:"li"},"Y")),(0,i.kt)("li",{parentName:"ol"},"Select a reason for revocation. The reason really doesn\u2019t matter for our use case. I usually select 3 = Key is no longer used"),(0,i.kt)("li",{parentName:"ol"},"Enter an optional description, or hit enter to continue. This field is not important."),(0,i.kt)("li",{parentName:"ol"},"Enter the command: ",(0,i.kt)("inlineCode",{parentName:"li"},"Y")),(0,i.kt)("li",{parentName:"ol"},"Store this file in 1Password and delete it from your system.")),(0,i.kt)("h2",{id:"configuring-the-yubikey"},"Configuring the YubiKey"),(0,i.kt)("h3",{id:"importing-the-keys-to-your-yubikey"},"Importing the keys to your YubiKey"),(0,i.kt)("p",null,"This will ",(0,i.kt)("em",{parentName:"p"},"destructively")," move the secret key as well as the three subkeys to the YubiKey from the local keystore, via the ",(0,i.kt)("inlineCode",{parentName:"p"},"keytocard")," command. In this case, ",(0,i.kt)("em",{parentName:"p"},"destructively")," is a good thing because it will require the YubiKey to be inserted to perform any of these functions."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Insert the YubiKey into the USB port")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Enter the GPG command: ",(0,i.kt)("inlineCode",{parentName:"p"},"gpg --edit-key 1234ABC")," (where 1234ABC is the key ID of your key)")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Enter the command: ",(0,i.kt)("inlineCode",{parentName:"p"},"toggle")," to switch to the public key listing (there will be no visible output)")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Enter the command: ",(0,i.kt)("inlineCode",{parentName:"p"},"key 1")," (to select subkey 1)"),(0,i.kt)("p",{parentName:"li"},(0,i.kt)("em",{parentName:"p"},"The interface is not intuitive here. Typing ",(0,i.kt)("inlineCode",{parentName:"em"},"key 1")," will select the first subkey (ssb). An * next to the key will indicate that it has been selected:")),(0,i.kt)("img",{src:"images/yubikey-key-import.png",alt:"check import",width:"500"})),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Enter the command: ",(0,i.kt)("inlineCode",{parentName:"p"},"keytocard"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"When prompted where to store the key, select ",(0,i.kt)("inlineCode",{parentName:"p"},"2"),". This will move the ",(0,i.kt)("em",{parentName:"p"},"encryption")," subkey to the YubiKey")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Enter the command: ",(0,i.kt)("inlineCode",{parentName:"p"},"key 1")," (to deselect subkey 1)")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Enter the command: ",(0,i.kt)("inlineCode",{parentName:"p"},"key 2")," (to select subkey 2)")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Enter the command: ",(0,i.kt)("inlineCode",{parentName:"p"},"keytocard"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"When prompted where to store the key, select 1. This will move the ",(0,i.kt)("em",{parentName:"p"},"signing")," subkey to the YubiKey")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Enter the command: ",(0,i.kt)("inlineCode",{parentName:"p"},"key 2")," (to deselect subkey 2)")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Enter the command: ",(0,i.kt)("inlineCode",{parentName:"p"},"key 3")," (to select subkey 3)")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Enter the command: ",(0,i.kt)("inlineCode",{parentName:"p"},"keytocard"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"When prompted where to store the key, select 3. This will move the ",(0,i.kt)("em",{parentName:"p"},"authentication")," subkey to the YubiKey")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Enter the command: ",(0,i.kt)("inlineCode",{parentName:"p"},"save")," to save the configuration and exit to the CLI."))),(0,i.kt)("h2",{id:"adding-additional-email-addresses"},"Adding Additional Email Addresses"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Insert the YubiKey into the USB port"),(0,i.kt)("li",{parentName:"ol"},"Enter the GPG command: ",(0,i.kt)("inlineCode",{parentName:"li"},"gpg --expert --edit-key 1234ABC")," (where 1234ABC is the key ID of your key)"),(0,i.kt)("li",{parentName:"ol"},"Enter the command: ",(0,i.kt)("inlineCode",{parentName:"li"},"adduid")),(0,i.kt)("li",{parentName:"ol"},"Enter your Name"),(0,i.kt)("li",{parentName:"ol"},"Enter the Additional Email Address"),(0,i.kt)("li",{parentName:"ol"},"Enter a comment if desired"),(0,i.kt)("li",{parentName:"ol"},"Enter (",(0,i.kt)("inlineCode",{parentName:"li"},"O"),")kay"),(0,i.kt)("li",{parentName:"ol"},"Enter your PIN if prompted"),(0,i.kt)("li",{parentName:"ol"},"Enter the command: ",(0,i.kt)("inlineCode",{parentName:"li"},"quit")),(0,i.kt)("li",{parentName:"ol"},"When prompted to save your changes, enter y (yes). You have now saved the additional email address to your YubiKey")),(0,i.kt)("h3",{id:"uids-and-the-primary-key"},"UIDs and the primary key"),(0,i.kt)("p",null,"User IDs are attached to the primary key (aka: master key). Subkeys do not contain any user ID\ninformation. Therefore, if you want to change the user ID information, you only need to:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Modify the primary key (after importing from the key saved in 1Password) to include whatever\nuser ID(s) you choose."),(0,i.kt)("li",{parentName:"ol"},"Re-generate GPG ASCII armor."),(0,i.kt)("li",{parentName:"ol"},"Upload the new GPG ASCII armor to GitHub."),(0,i.kt)("li",{parentName:"ol"},"Re-import the new public key into your local keychain.")),(0,i.kt)("p",null,"This process does not require modification of anything on the YubiKey. You can verify the results\nof your changes by running ",(0,i.kt)("inlineCode",{parentName:"p"},"gpg --card-status")," while you do and do not have the public key imported\ninto your local keychain. For example:"),(0,i.kt)("p",null,"Without importing public key into your local GPG keychain:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-console"},"$ gpg --card-status | grep key\nURL of public key : [not set]\nSignature key ....: AAAA BBBB CCCC DDDD EEEE  FFFF 0000 1111 2345 6CDE\nEncryption key....: BBBB CCCC DDDD EEEE FFFF  0000 1111 2222 3234 5BCD\nAuthentication key: CCCC DDDD EEEE FFFF 0000  1111 2222 3333 4456 7DEF\nGeneral key info..: [none]\n")),(0,i.kt)("p",null,'With importing public key into your local GPG keychain (note the "General key info" now shows User\nID information):'),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-console"},"$ gpg --card-status | grep key\nURL of public key : [not set]\nSignature key ....: AAAA BBBB CCCC DDDD EEEE  FFFF 0000 1111 2345 6CDE\nEncryption key....: BBBB CCCC DDDD EEEE FFFF  0000 1111 2222 3234 5BCD\nAuthentication key: CCCC DDDD EEEE FFFF 0000  1111 2222 3333 4456 7DEF\nGeneral key info..: sub  rsa4096/3456CDE 2020-10-14 Human Person <noreply@truss.works>\n")),(0,i.kt)("h2",{id:"configuring-ssh"},"Configuring SSH"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Insert the YubiKey into the USB port"),(0,i.kt)("li",{parentName:"ol"},"Configure your environment"),(0,i.kt)("li",{parentName:"ol"},"Enter the GPG command: ",(0,i.kt)("inlineCode",{parentName:"li"},"gpg --export-ssh-key 1234ABC")," (where 1234ABC is the key ID of your key)"),(0,i.kt)("li",{parentName:"ol"},"This will return a string that begins with: ssh-rsa and ends with openpgp:0x1234ABC"),(0,i.kt)("li",{parentName:"ol"},"To use this key to push to GitHub, copy this key into your ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/settings/keys"},"GitHub account"),". If you need to use it to SSH directly into a host, you will need to add it to an authorized-keys file."),(0,i.kt)("li",{parentName:"ol"},"Verify the SSH key with the command: ssh-add -L"),(0,i.kt)("li",{parentName:"ol"},"This should verify that the SSH key is available on your yubikey. If the string ends in ",(0,i.kt)("inlineCode",{parentName:"li"},"cardno:000YXXXXXXXX"),", then it is on the YubiKey."),(0,i.kt)("li",{parentName:"ol"},"Restart the SSH services if necessary with the following commands: source ~/.bash_profile or  source ~/.bashrc"),(0,i.kt)("li",{parentName:"ol"},"When connecting via SSH, you should be prompted for your YubiKey User PIN",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"On first use, it may also prompt for the YubiKey passphrase.")))),(0,i.kt)("h2",{id:"configuring-git-commit-signing"},"Configuring git commit Signing"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Insert the YubiKey into the USB port")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Enter the GPG command: ",(0,i.kt)("inlineCode",{parentName:"p"},"gpg --export --armor 1234ABC")," (where 1234ABC is the key ID of your secret key)")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"This will export your public key, which is derived from the secret key. Copy this entire key including the lines:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-plaintext"},"-----BEGIN PGP PUBLIC KEY BLOCK-----\n\n-----END PGP PUBLIC KEY BLOCK-----\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Add this key into GitHub")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Add the key into your git config with the following command: ",(0,i.kt)("inlineCode",{parentName:"p"},"git config --global user.signingkey 1234ABC")," (where 1234ABC is the key ID of your key)")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Add your name to your git config with the following command: ",(0,i.kt)("inlineCode",{parentName:"p"},"git config --global user.name \u201cyour name\u201d")," (this should match the name provided when you generate your certificate)")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Add your email to your git config with the following command: ",(0,i.kt)("inlineCode",{parentName:"p"},"git config --global user.email youremail@truss.works")," (this should match the email that you push commits with)")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Configure Git client to always sign commits: ",(0,i.kt)("inlineCode",{parentName:"p"},"git config --global commit.gpgsign true")))),(0,i.kt)("h2",{id:"configuring-github"},"Configuring Github"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"This step is not sequential and is linked in previous steps. If you\u2019ve reached this point in the document, you should have already completed this.")),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Sign into the GitHub web interface"),(0,i.kt)("li",{parentName:"ol"},"Click on the user icon in the upper right hand corner and select settings"),(0,i.kt)("li",{parentName:"ol"},"Select SSH and PGP Keys"),(0,i.kt)("li",{parentName:"ol"},"Add an SSH Key and enter the value generated in Configuring SSH"),(0,i.kt)("li",{parentName:"ol"},"Add a new GPG Key and enter the value generated in Configuring git signing")),(0,i.kt)("h3",{id:"using-github-desktop"},"Using Github Desktop"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"echo no-tty >> ~/.gnupg/gpg.conf"),(0,i.kt)("li",{parentName:"ol"},"Specify GPG path for clients: ",(0,i.kt)("inlineCode",{parentName:"li"},"git config --global gpg.program /usr/local/bin/gpg"))),(0,i.kt)("h2",{id:"verifying-your-configuration"},"Verifying your configuration"),(0,i.kt)("p",null,"To verify that you have both GPG and SSH properly configured, perform the following steps."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Close out of all terminals. This is to ensure that any terminal/shell configuration you made is\nsaved to disk rather than only configured for a shell session. Re-open your terminal of choice.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Remove your YubiKey.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Verify that the only data from your key in your GPG keyring is public key information. If you\nsee ",(0,i.kt)("inlineCode",{parentName:"p"},"sec")," (secret) next to your primary key and/or ",(0,i.kt)("inlineCode",{parentName:"p"},"ssb")," (secret subkey), then you still have\nsecret key material in your keyring and/or on your system. Follow the instructions in the\n",(0,i.kt)("a",{parentName:"p",href:"#deleting-local-secret-key-material"},"deleting local secret key material")," section if this is the\ncase."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-console"},"$ gpg --list-keys 1234ABC\npub   rsa4096 2020-10-13 [SC]\n      REALLYEXTRALONGSTRINGTHATENDSWITH1234ABC\nuid           [ultimate] Human Person <noreply@truss.works>\nsub   rsa4096 2020-10-13 [E]\nsub   rsa4096 2020-10-14 [S]\nsub   rsa4096 2020-10-14 [A]\n")),(0,i.kt)("p",{parentName:"li"},"You can also run these commands to see if you have any secret key material in your keyring."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-console"},"gpg --export-secret-key --armor 1234ABC | gpg --list-packets --verbose | grep skey\ngpg --export-secret-subkeys --armor 1234ABC | gpg --list-packets --verbose | grep skey\n")),(0,i.kt)("p",{parentName:"li"},"2 things will tell you that the secret key material is not present:"),(0,i.kt)("ol",{parentName:"li"},(0,i.kt)("li",{parentName:"ol"},"GPG will not ask for your passphrase. If secret key material was present, it would have asked\nfor a passphrase so that it could decrypt the secret key material."),(0,i.kt)("li",{parentName:"ol"},"You have no output. If you had output, it would look something like ",(0,i.kt)("inlineCode",{parentName:"li"},"skey[2]: [v4 protected]"),". If you do have ",(0,i.kt)("inlineCode",{parentName:"li"},"skey")," in your output, then you have secret key material on your\nlocal system. If no secret key material is on your local system, then you should only have\n",(0,i.kt)("inlineCode",{parentName:"li"},"pkey")," values (if you remove the ",(0,i.kt)("inlineCode",{parentName:"li"},"grep")," command).",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"skey: secret key"),(0,i.kt)("li",{parentName:"ul"},"pkey: public key"))))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Re-insert your YubiKey.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Initialize your YubiKey in whatever way you configured it. If you made a separate script, run\nthat. If you need to open a new terminal, do that. Whatever approach you take, it should be the\nthing that does a ",(0,i.kt)("inlineCode",{parentName:"p"},"killall")," on gpg-agent and ssh-agent, followed by ",(0,i.kt)("inlineCode",{parentName:"p"},"gpg --card-status all &> /dev/null"),".")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Verify that the secret key data is now available to GPG. This is what it looks like when the key\nmaterial only exists on the YubiKey (not loaded from secret material stored on your system):"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-console"},"$ gpg --card-status\n<snip>\nsec#  rsa4096/1234ABC  created: 2020-10-13  expires: never\nssb>  rsa4096/2345BCD  created: 2020-10-13  expires: never\n                       card-no: 000Y XXXXXXXX\nssb>  rsa4096/3456CDE  created: 2020-10-14  expires: never\n                       card-no: 000Y XXXXXXXX\nssb>  rsa4096/4567DEF  created: 2020-10-14  expires: never\n                       card-no: 000Y XXXXXXXX\n")),(0,i.kt)("p",{parentName:"li"},"If you do not see ",(0,i.kt)("inlineCode",{parentName:"p"},"sec#")," next to the primary key and do not see ",(0,i.kt)("inlineCode",{parentName:"p"},"ssb>")," next to the subkeys, then\nthe secret key material may exist on the YubiKey, but GPG is falling back to locally\nstored/loaded secret key material. If this is the case (incorrect configuration), it will look\nlike this. Note there is no ",(0,i.kt)("inlineCode",{parentName:"p"},"#")," after ",(0,i.kt)("inlineCode",{parentName:"p"},"sec")," and no ",(0,i.kt)("inlineCode",{parentName:"p"},">")," after ",(0,i.kt)("inlineCode",{parentName:"p"},"ssb"),":"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-console"},"$ gpg --card-status\n<snip>\nsec   rsa4096/1234ABC  created: 2020-10-13  expires: never\nssb   rsa4096/2345BCD  created: 2020-10-13  expires: never\nssb   rsa4096/3456CDE  created: 2020-10-14  expires: never\nssb   rsa4096/4567DEF  created: 2020-10-14  expires: never\n")),(0,i.kt)("p",{parentName:"li"},"If you do not see the ",(0,i.kt)("inlineCode",{parentName:"p"},"#")," and ",(0,i.kt)("inlineCode",{parentName:"p"},">")," characters after ",(0,i.kt)("inlineCode",{parentName:"p"},"sec")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"ssb"),", then the secret key material\nneeds to be removed from your local system. See the ",(0,i.kt)("a",{parentName:"p",href:"#deleting-local-secret-key-material"},"deleting local secret key\nmaterial")," section if this is the case.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Verify that the SSH agent can use the subkey used for authentication. If you do not see an entry\nwith ",(0,i.kt)("inlineCode",{parentName:"p"},"cardno")," near the end, then the SSH agent is not correctly configured to use the\nauthentication subkey on your YubiKey."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-console"},"$ ssh-add -L\nssh-rsa AAAAB3<snip>2yyu4Q== cardno:000YXXXXXXXX\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Verify that the GPG agent can use the subkey used for signing. You should see a PGP signature\nthat is generated by running this test. If not, then the GPG agent is not correctly configured\nto use the signing subkey on your YubiKey."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-console"},'$ echo "test" | gpg --clearsign\ngpg: using "REALLYEXTRALONGSTRINGTHATENDSWITH1234ABC" as default secret key for signing\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA256\n\ntest\n-----BEGIN PGP SIGNATURE-----\n\niQIzBAEBCAAdFiEE9zVLjb+li/0UKVrGlXbmxIOHrVoFAl+HbEgACgkQlXbmxIOH\nrVqu7g//RtdsYwTS5+k2pF+IEUyZk0LXnjdnRZhEjRT9M34d/Sh6jhgYZPLx7NLp\n+YSKRLnMpxx1JbS/ffkmq9zibeODyeilO30zh6xC5TsIZak489i0jl1wTo4J7DGf\n4VqoTqNwc3RE8FTUYFGX6trgbjeu7q7yoo6yEGWaxLhR0/TRTU0/eREgAsdwxR+6\n7TkmhxIXV7zO6pe4wLddvJzOM/KZyaumv1dJ0nX3U4q50IqXf+He3WGuetZUci80\nmIsUfv7TH2Bo3kIqm/cTtcpjiXrIXrfpFxC5o9mGII5tw3YzXw0chGm7X5q2yyTl\n7DNpJE/s6kXei45UER/NtyKH6N63GRN9c3aBs4ARGIU/hAlH5SrKOlRCTYENh0HC\ndGJZ68LBvpUNujtU/8TZaPPz0cfhb1hhOa8Ruoo9DwujpScjgpKgpuVxCM+YZB2l\n8/mGGhAzXDIhE8JDjEKk2bHaTy2gulwqTDjuv572qwwJvYkQT3wmx8dp0jswL0fj\nNdjVPs47PGNsLkrVnudzx4VkrS/l8+1g2jn2jCsEbwzjSqWsDYEDAbgopNC4wUQC\nLvXG4r7r2JS6rlmE9rOMlsx3IW16eIGmRCunbP6oOzPJkFn7rBEpl8U37CVdU46F\nhrWMtDgZrBwtz9oklxMfnQMWq+4lCEVuxT6nMJ8FeqxxAnmhVUc=\n=7pFx\n-----END PGP SIGNATURE-----\n')),(0,i.kt)("p",{parentName:"li"},"If this errors out like this be sure that the environment var ",(0,i.kt)("inlineCode",{parentName:"p"},"GPG_TTY")," is set. See ",(0,i.kt)("a",{parentName:"p",href:"#configuring-your-environment"},"Configuring Your Environment")),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-console"},'0 \u276f echo "test" | gpg --clearsign\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA256\n\ntest\ngpg: signing failed: Inappropriate ioctl for device\ngpg: [stdin]: clear-sign failed: Inappropriate ioctl for device\n'))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},'Verify that the GPG agent can use the subkey used for encryption. This command will create\ncontent ("hello world"), encrypt it from standard input to standard output, and then decrypt it\nfrom standard input to standard output. The final line should be the input string ("hello\nworld").'),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-console"},'$ echo "hello world" | gpg --recipient 1234ABC -o- --encrypt - | gpg --decrypt -\ngpg: encrypted with 4096-bit RSA key, ID 2345BCD, created 2020-10-13\n      "Human Person <noreply@truss.works>"\nhello world\n')),(0,i.kt)("p",{parentName:"li"},"You may get an error such as the following. This is transient. As long as the output ends with\nthe string that you echoed out, then everything is working properly."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-plaintext"},"gpg: error opening lockfile '/Users/human/.gnupg/pubring.kbx.lock': No such file or directory\ngpg: lockfile disappeared\n")))),(0,i.kt)("h3",{id:"deleting-local-secret-key-material"},"Deleting local secret key material"),(0,i.kt)("p",null,"During this process, you may find that you have secret key material on your system even though you\nthought you removed it. For instance, this may happen when using ",(0,i.kt)("inlineCode",{parentName:"p"},"keytocard"),". While it is supposed\nto be destructive and remove secret key material from your system (leaving it only on your\nYubiKey), this is not always the case despite what the documentation indicates. Therefore, you may\nhave to manually remove the secret keys from your system. To do that, follow this procedure:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Remove the YubiKey from the computer.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Delete the ",(0,i.kt)("strong",{parentName:"p"},"secret")," key material from your system. ",(0,i.kt)("em",{parentName:"p"},"Do not remove your ",(0,i.kt)("strong",{parentName:"em"},"public")," key material\nor else your GPG agent will not be able to identify the correct secret keys to use on your\nYubiKey.")),(0,i.kt)("p",{parentName:"li"},"To delete your primary secret key material, run the following command:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-console"},"gpg --delete-secret-key 1234ABC\n")),(0,i.kt)("p",{parentName:"li"},"If for some reason that command does not fully delete the subkey secret key material, you can\ndelete that data with this procedure. First identify the keygrips for each subkey. Then delete\nthem."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-console"},'$ gpg --with-keygrip --list-secret-keys "1234ABC"\nsec#  rsa4096 2020-10-13 [SC]\n      REALLYEXTRALONGSTRINGTHATENDSWITH1234ABC\n      Keygrip = REALLYEXTRALONGSTRINGTHATENDSWITH5677EFA\nuid           [ultimate] Human Person <noreply@truss.works>\nssb>  rsa4096 2020-10-13 [E]\n      Keygrip = REALLYEXTRALONGSTRINGTHATENDSWITH2345BCD\nssb>  rsa4096 2020-10-14 [S]\n      Keygrip = REALLYEXTRALONGSTRINGTHATENDSWITH3456CDE\nssb>  rsa4096 2020-10-14 [A]\n      Keygrip = REALLYEXTRALONGSTRINGTHATENDSWITH4567DEF\n')),(0,i.kt)("p",{parentName:"li"},"Once you have the subkey keygrips, delete the secret subkey material:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},'$ gpg-connect-agent "delete_key REALLYEXTRALONGSTRINGTHATENDSWITH2345BCD" /bye\nOK\n$ gpg-connect-agent "delete_key REALLYEXTRALONGSTRINGTHATENDSWITH3456CDE" /bye\nOK\n$ gpg-connect-agent "delete_key REALLYEXTRALONGSTRINGTHATENDSWITH4567DEF" /bye\nOK\n'))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Insert YubiKey back into the computer.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Ensure that the signature key, encryption key, and authentication key are set. Ensure that each\nof these keys have a ",(0,i.kt)("inlineCode",{parentName:"p"},"card-no")," entry next to them."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-console"},"gpg --card-status\n<snip>\nSignature key ....: AAAA BBBB CCCC DDDD EEEE  FFFF 0000 1111 2345 6CDE\n      created ....: 2020-10-14 00:06:51\nEncryption key....: BBBB CCCC DDDD EEEE FFFF  0000 1111 2222 3234 5BCD\n      created ....: 2020-10-13 23:59:43\nAuthentication key: CCCC DDDD EEEE FFFF 0000  1111 2222 3333 4456 7DEF\n      created ....: 2020-10-14 00:07:50\nGeneral key info..: sub  rsa4096/3456CDE 2020-10-14 Human Person <noreply@truss.works>\nsec#  rsa4096/1234ABC  created: 2020-10-13  expires: never\nssb>  rsa4096/2345BCD  created: 2020-10-13  expires: never\n                       card-no: 000Y XXXXXXXX\nssb>  rsa4096/3456CDE  created: 2020-10-14  expires: never\n                       card-no: 000Y XXXXXXXX\nssb>  rsa4096/4567DEF  created: 2020-10-14  expires: never\n                       card-no: 000Y XXXXXXXX\n")))),(0,i.kt)("p",null,"Note: if you delete the public keys from your local system, then ",(0,i.kt)("inlineCode",{parentName:"p"},"gpg")," operations will fail when\nusing your YubiKey."),(0,i.kt)("h3",{id:"subkey-stubs"},"Subkey stubs"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"~/.gnupg/private-keys-v1.d")," will contain the key stubs for each of the subkeys. These do not\ncontain secret key material, but instead tell GPG that the secret key material is on your YubiKey.\nTo verify this, you can look at the strings in that file and search for a match for\n",(0,i.kt)("inlineCode",{parentName:"p"},"shadowed-private-key"),". The output will look similar to the following:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-console"},"$ strings filename.key| grep shadowed-private-key\n(20:shadowed-private-key(3:rsa(1:n513:\n")),(0,i.kt)("p",null,"If you see something like the output above, then the file is a stub key, which does not contain the\nsecret key material. Instead, it indicates that the secret key material is on your YubiKey."),(0,i.kt)("h2",{id:"using-the-yubikey"},"Using The YubiKey"),(0,i.kt)("h3",{id:"signing-git-commits"},"Signing git commits"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Insert the YubiKey into the USB port")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"To manually sign a git commit (commits should already be signed automatically if you've enabled it in your git config):"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-console"},"$ git commit -a -S -m 'Fixed a small undocumented procedure that made foo crash'\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"To manually sign a git tag:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-console"},"$ git tag foo-1.0 -s -m 'Release 1.0 of foo'\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"When signing, you should be prompted to enter your YubiKey User PIN")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"If you\u2019ve enabled touch mode, touch the YubiKey to complete the operation"))),(0,i.kt)("h3",{id:"enabling-touch-only-mode-optional"},"Enabling touch-only mode (optional)"),(0,i.kt)("p",null,"It is possible that your YubiKey could be activated by malware on your machine, which could conceivably use a keylogger to capture your PIN and use that information to automatically sign commits and tags when you're not aware."),(0,i.kt)("p",null,"If enabling touch-only mode, it is recommended to perform this step after you\u2019ve confirmed that everything else is working."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Enter the command: ",(0,i.kt)("inlineCode",{parentName:"li"},"ykman openpgp set-touch aut on")),(0,i.kt)("li",{parentName:"ol"},"Enter: ",(0,i.kt)("inlineCode",{parentName:"li"},"yes")),(0,i.kt)("li",{parentName:"ol"},"Enter the 8 digit Admin PIN to confirm the setting change")),(0,i.kt)("p",null,"NOTE: When touch mode is enabled, operations will appear to stall. This is the only prompt that you will receive to touch your YubiKey. Failure to touch the YubiKey for authentication will result in failure of the operation. You can also disable touch-only mode with the following command: ",(0,i.kt)("inlineCode",{parentName:"p"},"ykman openpgp set-touch aut off")),(0,i.kt)("h3",{id:"disabling-otp-one-time-password"},"Disabling OTP (One Time Password)"),(0,i.kt)("p",null,"Disabling the OTP is possible using the YubiKey Manager, and does not affect any other functionality of the YubiKey."),(0,i.kt)("p",null,"A side effect of the YubiKey is the Yubisneeze. The YubiKey will generate and paste a password to your screen nearly every time that you touch it."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Insert the YubiKey into the USB port"),(0,i.kt)("li",{parentName:"ol"},"Enter the command: ",(0,i.kt)("inlineCode",{parentName:"li"},"ykman config usb --disable otp")),(0,i.kt)("li",{parentName:"ol"},"Enter the command: ",(0,i.kt)("inlineCode",{parentName:"li"},"Y")," to confirm")),(0,i.kt)("p",null,"To re-enable otp, use the command: ",(0,i.kt)("inlineCode",{parentName:"p"},"ykman config usb --enable otp")),(0,i.kt)("h2",{id:"github-apps"},"GitHub Apps"),(0,i.kt)("p",null,"GitHub Desktop does not support commit signing. In fact, it appears that GitHub wants to keep it this way. That said, if GitHub is configured with your keys correctly, GitHub Desktop may respect your settings and sign commits. We\u2019re still testing this."),(0,i.kt)("p",null,"Gitkraken directly ",(0,i.kt)("a",{parentName:"p",href:"https://support.gitkraken.com/git-workflows-and-extensions/commit-signing-with-gpg/"},"supports")," commit signing."),(0,i.kt)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"The YubiKey is not detected when signing a commit or pulling a private repo via SSH.")),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Ensure that the environment has been configured correctly"),(0,i.kt)("li",{parentName:"ol"},"Run ",(0,i.kt)("inlineCode",{parentName:"li"},"source ~/.bashrc")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"source ~./zshrc"))),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"The YubiKey appears to hang when performing operations and then the operations time out.")),(0,i.kt)("p",null,"Touch-only has been enabled. There is no prompt that the YubiKey is waiting to be touched. Run the operation again and touch the YubiKey when the operation hangs. You may see something similar to this:"),(0,i.kt)("img",{src:"images/yubikey-otp-error.png",alt:"otp error",width:"450"}),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"SSH commands like ",(0,i.kt)("inlineCode",{parentName:"em"},"ssh -T git@github.com")," do not ask for pin")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-console"},'0 \u276f ssh -T git@github.com\nsign_and_send_pubkey: signing failed for RSA "cardno:000YXXXXXXXX" from agent: agent refused operation\ngit@github.com: Permission denied (publickey).\n')),(0,i.kt)("p",null,"Make sure that ",(0,i.kt)("inlineCode",{parentName:"p"},"GPG_TTY")," is set. If so you may need to also run ",(0,i.kt)("inlineCode",{parentName:"p"},"gpg-connect-agent updatestartuptty /bye")," to force the agent to uppdate the tty"))}d.isMDXComponent=!0}}]);